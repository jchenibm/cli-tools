#!/bin/bash

# 函数：显示用法
usage() {
    echo "Usage: $0 [-m model-name] <file-to-chat-with>"
    exit 1
}

# 处理命令行选项
while getopts "m:" opt; do
    case ${opt} in
        m )
            MODEL_NAME=$OPTARG
            ;;
        \? )
            usage
            ;;
    esac
done
shift $((OPTIND -1))

# 检查是否提供了文件参数
if [ "$#" -ne 1 ]; then
    usage
fi

FILE="$1"
BASE_NAME="${FILE%.*}"
EXT="${FILE##*.}"
MD_FILE="${BASE_NAME}.md"

# 确保必要的工具已安装
if ! command -v llm &> /dev/null; then
    echo "llm could not be found. Please install it and try again."
    exit 1
fi

# 处理文件根据文件扩展名
case "$EXT" in
    ppt|pptx)
        # 处理 PPT/PPTX 文件
        if [ ! -f "$MD_FILE" ]; then
            echo "Markdown file not found. Converting PPT/PPTX file to Markdown..."
            pptx2md "$FILE" -o "$MD_FILE"
            
            if [ $? -ne 0 ]; then
                echo "Failed to convert PPT/PPTX to Markdown."
                exit 1
            fi
            
            echo "Markdown file created: $MD_FILE"
        else
            echo "Markdown file already exists: $MD_FILE"
        fi
        ;;
        
    pdf)
        # 处理 PDF 文件
        if [ ! -f "$MD_FILE" ]; then
            echo "Text file not found. Converting PDF file to Text..."
            pdftotext "$FILE" "$MD_FILE"
            
            if [ $? -ne 0 ]; then
                echo "Failed to convert PDF to Text."
                exit 1
            fi
            
            echo "Text file created: $MD_FILE"
        else
            echo "Text file already exists: $MD_FILE"
        fi
        ;;
        
    *)
        # 处理其他类型的文件
        echo "Processing other file types..."
        
        # 将文件复制为基本名称的文本文件
        cp "$FILE" "$MD_FILE"
        ;;
esac


# 开始与文件的对话
FILE_CONTENT=$(cat "$MD_FILE")

if [ -n "$MODEL_NAME" ]; then  #带有模型名称
    llm chat -m $MODEL_NAME -s "I will ask you questions with context $FILE_CONTENT and you should answer based on the context faithfully."
else
    llm chat -s "I will ask you questions with context $FILE_CONTENT and you should answer based on the context faithfully."
fi


echo "Happy chatting with you! Bye for now ..."